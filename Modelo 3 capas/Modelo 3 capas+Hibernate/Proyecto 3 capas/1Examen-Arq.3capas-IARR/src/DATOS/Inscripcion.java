package DATOS;
// Generated 18-ago-2011 23:17:44 by Hibernate Tools 3.2.1.GA


import java.sql.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import org.hibernate.Session;

/**
 * Inscripcion generated by hbm2java
 */
public class Inscripcion  implements java.io.Serializable {


     private int codigo;
     private Edicion edicion;
     private Empleado empleado;
     private String descripcion;
     private Date fecha;

    public Inscripcion() {
    }

	
    public Inscripcion(int codigo) {
        this.codigo = codigo;
    }
    public Inscripcion(int codigo, Edicion edicion, Empleado empleado, String descripcion, Date fecha) {
       this.codigo = codigo;
       this.edicion = edicion;
       this.empleado = empleado;
       this.descripcion = descripcion;
       this.fecha = fecha;
    }
   
    public int getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(int codigo) {
        this.codigo = codigo;
    }
    public Edicion getEdicion() {
        return this.edicion;
    }
    
    public void setEdicion(Edicion edicion) {
        this.edicion = edicion;
    }
    public Empleado getEmpleado() {
        return this.empleado;
    }
    
    public void setEmpleado(Empleado empleado) {
        this.empleado = empleado;
    }
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

//******************************************************************************
public void Insertar() {

        try {
            Session sesion = HibernateUtil.getSessionFactory().openSession();
            sesion.getTransaction().begin();
            sesion.save(this);
            sesion.flush();
            sesion.getTransaction().commit();
            sesion.close();
            JOptionPane.showMessageDialog(null, "DATOS INSERTADOS CORRECTAMENTE.", "MENSAJE", JOptionPane.WARNING_MESSAGE, null);
        }catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
}

//------------------------------------------------------------------------------
public void Modificar() {

     try {
            Session sesion = HibernateUtil.getSessionFactory().openSession();
            sesion.getTransaction().begin();
            sesion.update(this);
            sesion.flush();
            sesion.getTransaction().commit();
            sesion.close();
            JOptionPane.showMessageDialog(null, "DATOS MODIFICADOS CORRECTAMENTE.", "MENSAJE", JOptionPane.WARNING_MESSAGE, null);
        }catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
    }
//------------------------------------------------------------------------------
 public void Eliminar() {
          try {
            Session sesion = HibernateUtil.getSessionFactory().openSession();
            sesion.getTransaction().begin();
            sesion.delete(this);
            sesion.flush();
            sesion.getTransaction().commit();
            sesion.close();
            JOptionPane.showMessageDialog(null, "DATOS ELIMINADOS CORRECTAMENTE.", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE, null);
        }catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
    }

//------------------------------------------------------------------------------

public boolean Existe(int id) {

        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();

        Iterator resultado = null;
        Object x = null;

        try {
            resultado = sesion.createSQLQuery("select CODIGO from inscripcion where CODIGO =" + id + "").list().iterator();

        } catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }

        while (resultado.hasNext()) {
            x = resultado.next();
            System.out.println("elemento id : " + x.toString());
        }
        sesion.close();
        if (x != null) {
            return true;
        } else {
            return false;
        }

    }
//------------------------------------------------------------------------------
    public List getListInscripcion(){
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();
        List<Inscripcion> t=null;
        try {
            t=sesion.createSQLQuery("select *from inscripcion").list();
        } catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
        sesion.flush();
        sesion.close();
        return t;
    }
//------------------------------------------------------------------------------
    public Inscripcion getInscripcion(int id){
        Inscripcion x = new Inscripcion();
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();
        List<Object[]> t=null;
        try {
            t=sesion.createSQLQuery("select *from inscripcion where CODIGO = "+id+"").list();
        } catch (HibernateException e) {
             System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
         sesion.flush();
         sesion.close();
         
        if(t.size()>0){
          
            x.setCodigo(Integer.valueOf(t.get(0)[0].toString()));
            x.setDescripcion(t.get(0)[1].toString());
            Date dato = Date.valueOf(t.get(0)[2].toString());
            x.setFecha(dato);
            return x;
        }else{
             return null;
        }

    }
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------

//------------------------------------------------------------------------------



}


