package DATOS;
// Generated 18-ago-2011 23:17:44 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.sql.Time;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import org.hibernate.Session;

/**
 * Horario generated by hbm2java
 */
public class Horario  implements java.io.Serializable {

     private int idhora;
     private Edicion edicion;
     private String dias;
     private Date horaIni;
     private Date horaFin;

    public Horario() {
        edicion = new Edicion();
    }

	
    public Horario(int idhora, String dias, Date horaIni, Date horaFin) {
        this.idhora = idhora;
        this.dias = dias;
        this.horaIni = horaIni;
        this.horaFin = horaFin;
    }
    public Horario(int idhora, Edicion edicion, String dias, Date horaIni, Date horaFin) {
       this.idhora = idhora;
       this.edicion = edicion;
       this.dias = dias;
       this.horaIni = horaIni;
       this.horaFin = horaFin;
    }
   
    public int getIdhora() {
        return this.idhora;
    }
    
    public void setIdhora(int idhora) {
        this.idhora = idhora;
    }
    public Edicion getEdicion() {
        return this.edicion;
    }
    
    public void setEdicion(Edicion edicion) {
        this.edicion = edicion;
    }
    public String getDias() {
        return this.dias;
    }
    
    public void setDias(String dias) {
        this.dias = dias;
    }
    public Date getHoraIni() {
        return this.horaIni;
    }
    
    public void setHoraIni(Date horaIni) {
        this.horaIni = horaIni;
    }
    public Date getHoraFin() {
        return this.horaFin;
    }
    
    public void setHoraFin(Date horaFin) {
        this.horaFin = horaFin;
    }

//******************************************************************************
public void Insertar() {

        try {
            Session sesion = HibernateUtil.getSessionFactory().openSession();
            sesion.getTransaction().begin();
            sesion.save(this);
            sesion.flush();
            sesion.getTransaction().commit();
            sesion.close();
            JOptionPane.showMessageDialog(null, "DATOS INSERTADOS CORRECTAMENTE.", "MENSAJE", JOptionPane.WARNING_MESSAGE, null);
        }catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
}

//------------------------------------------------------------------------------
public void Modificar() {

     try {
            Session sesion = HibernateUtil.getSessionFactory().openSession();
            sesion.getTransaction().begin();
            sesion.update(this);
            sesion.flush();
            sesion.getTransaction().commit();
            sesion.close();
            JOptionPane.showMessageDialog(null, "DATOS MODIFICADOS CORRECTAMENTE.", "MENSAJE", JOptionPane.WARNING_MESSAGE, null);
        }catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
    }
//------------------------------------------------------------------------------
 public void Eliminar() {
          try {
            Session sesion = HibernateUtil.getSessionFactory().openSession();
            sesion.getTransaction().begin();
            sesion.delete(this);
            sesion.flush();
            sesion.getTransaction().commit();
            sesion.close();
            JOptionPane.showMessageDialog(null, "DATOS ELIMINADOS CORRECTAMENTE.", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE, null);
        }catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
    }

//------------------------------------------------------------------------------

 public boolean Existe(int id) {

        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();

        Iterator resultado = null;
        Object x = null;

        try {
            resultado = sesion.createSQLQuery("select IDHORA from horario where IDHORA=" + id + "").list().iterator();

        } catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }

        while (resultado.hasNext()) {
            x = resultado.next();
            System.out.println("elemento id : " + x.toString());
        }
        sesion.close();
        if (x != null) {
            return true;
        } else {
            return false;
        }

    }
//------------------------------------------------------------------------------
    public List getListHorario(){
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();
        List<Horario> t=null;
        try {
            t=sesion.createSQLQuery("select *from horario").list();
        } catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
        sesion.flush();
        sesion.close();
        return t;
    }
//------------------------------------------------------------------------------
    public Horario getHorario(int id){
        Horario x = new Horario();
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();
        List<Object[]> t=null;
        try {
            t=sesion.createSQLQuery("select *from horario where IDHORA = "+id+"").list();
        } catch (HibernateException e) {
             System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
         sesion.flush();
         sesion.close();
        if(t.size()>0){
            x.setIdhora(Integer.valueOf(t.get(0)[0].toString()));
            x.setDias(t.get(0)[1].toString());
            Time horaI = Time.valueOf(t.get(0)[2].toString());
            Time horaF = Time.valueOf(t.get(0)[3].toString());
            x.setHoraIni(horaI);
            x.setHoraFin(horaF);
            x.setEdicion(edicion.getEdicion(t.get(0)[4].toString()));
            return x;
        }else{
             return null;
        }

    }
//------------------------------------------------------------------------------
 public Horario getIdHorario(String id){
     Horario x = new Horario();
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();
        List<Object[]> t=null;
        try {
            t=sesion.createSQLQuery("select *from horario where IDEDICION = '"+id+"'").list();
        } catch (HibernateException e) {
             System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
         sesion.flush();
         sesion.close();
        if(t.size()>0){
            x.setIdhora(Integer.valueOf(t.get(0)[0].toString()));
            x.setDias(t.get(0)[1].toString());
            Time horaI = Time.valueOf(t.get(0)[2].toString());
            Time horaF = Time.valueOf(t.get(0)[3].toString());
            x.setHoraIni(horaI);
            x.setHoraFin(horaF);
            x.setEdicion(edicion.getEdicion(t.get(0)[4].toString()));
            return x;
        }else{
             return null;
        }
 }
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------



}


