package DATOS;
// Generated 18-ago-2011 23:17:44 by Hibernate Tools 3.2.1.GA


import java.sql.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import org.hibernate.Session;

/**
 * Edicion generated by hbm2java
 */
public class Edicion  implements java.io.Serializable {


     private String codigo;
     private Aula aula;
     private Curso curso;
     private Empleado empleado;
     private Tema tema;
     private Date fechaIni;
     private Date fechaFin;
     private Set inscripcions = new HashSet(0);
     private Set horarios = new HashSet(0);
     private Set calificacions = new HashSet(0);

    public Edicion() {
        tema = new Tema();
        curso = new Curso();
        empleado = new Empleado();
        aula = new Aula();
    }

	
    public Edicion(String codigo, Aula aula, Curso curso, Empleado empleado, Tema tema) {
        this.codigo = codigo;
        this.aula = aula;
        this.curso = curso;
        this.empleado = empleado;
        this.tema = tema;
    }
    public Edicion(String codigo, Aula aula, Curso curso, Empleado empleado, Tema tema, Date fechaIni, Date fechaFin, Set inscripcions, Set horarios, Set calificacions) {
       this.codigo = codigo;
       this.aula = aula;
       this.curso = curso;
       this.empleado = empleado;
       this.tema = tema;
       this.fechaIni = fechaIni;
       this.fechaFin = fechaFin;
       this.inscripcions = inscripcions;
       this.horarios = horarios;
       this.calificacions = calificacions;
    }
   
    public String getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }
    public Aula getAula() {
        return this.aula;
    }
    
    public void setAula(Aula aula) {
        this.aula = aula;
    }
    public Curso getCurso() {
        return this.curso;
    }
    
    public void setCurso(Curso curso) {
        this.curso = curso;
    }
    public Empleado getEmpleado() {
        return this.empleado;
    }
    
    public void setEmpleado(Empleado empleado) {
        this.empleado = empleado;
    }
    public Tema getTema() {
        return this.tema;
    }
    
    public void setTema(Tema tema) {
        this.tema = tema;
    }
    public Date getFechaIni() {
        return this.fechaIni;
    }
    
    public void setFechaIni(Date fechaIni) {
        this.fechaIni = fechaIni;
    }
    public Date getFechaFin() {
        return this.fechaFin;
    }
    
    public void setFechaFin(Date fechaFin) {
        this.fechaFin = fechaFin;
    }
    public Set getInscripcions() {
        return this.inscripcions;
    }
    
    public void setInscripcions(Set inscripcions) {
        this.inscripcions = inscripcions;
    }
    public Set getHorarios() {
        return this.horarios;
    }
    
    public void setHorarios(Set horarios) {
        this.horarios = horarios;
    }
    public Set getCalificacions() {
        return this.calificacions;
    }
    
    public void setCalificacions(Set calificacions) {
        this.calificacions = calificacions;
    }

//******************************************************************************
public void Insertar() {

        try {
            Session sesion = HibernateUtil.getSessionFactory().openSession();
            sesion.getTransaction().begin();
            sesion.save(this);
            sesion.flush();
            sesion.getTransaction().commit();
            sesion.close();
            JOptionPane.showMessageDialog(null, "DATOS INSERTADOS CORRECTAMENTE.", "MENSAJE", JOptionPane.WARNING_MESSAGE, null);
        }catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
}

//------------------------------------------------------------------------------
public void Modificar() {

     try {
            Session sesion = HibernateUtil.getSessionFactory().openSession();
            sesion.getTransaction().begin();
            sesion.update(this);
            sesion.flush();
            sesion.getTransaction().commit();
            sesion.close();
            JOptionPane.showMessageDialog(null, "DATOS MODIFICADOS CORRECTAMENTE.", "MENSAJE", JOptionPane.WARNING_MESSAGE, null);

        }catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
    }
//------------------------------------------------------------------------------
 public void Eliminar() {
          try {
            Session sesion = HibernateUtil.getSessionFactory().openSession();
            sesion.getTransaction().begin();
            sesion.delete(this);
            sesion.flush();
            sesion.getTransaction().commit();
            sesion.close();
            JOptionPane.showMessageDialog(null, "DATOS ELIMINADOS CORRECTAMENTE.", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE, null);
        }catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
    }

//------------------------------------------------------------------------------

public boolean Existe(String id) {

        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();

        Iterator resultado = null;
        Object x = null;

        try {
            resultado = sesion.createSQLQuery("select CODIGO from edicion where CODIGO ='" + id + "'").list().iterator();

        } catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }

        while (resultado.hasNext()) {
            x = resultado.next();
            System.out.println("elemento id : " + x.toString());
        }
        sesion.close();
        if (x != null) {
            return true;
        } else {
            return false;
        }

    }
//------------------------------------------------------------------------------
    public List getListEdicion(){
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();
        List<Edicion> t=null;
        try {
            t=sesion.createSQLQuery("select *from edicion").list();
        } catch (HibernateException e) {
            System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
        sesion.flush();
        sesion.close();
        return t;
    }
//------------------------------------------------------------------------------
    public Edicion getEdicion(String id){
        Edicion x = new Edicion();
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();
        List<Object[]> t=null;
        try {
            t=sesion.createSQLQuery("select *from edicion where CODIGO = '"+id+"'").list();
        } catch (HibernateException e) {
             System.out.println("¡¡¡ ERROR EN LA CONSULTA !!! ---> " + e.toString());
        }
         sesion.flush();
         sesion.close();
        if(t.size()>0){
            x.setCodigo(t.get(0)[0].toString());
            Date fechaI = Date.valueOf(t.get(0)[1].toString());
            Date fechaF = Date.valueOf(t.get(0)[2].toString());
            x.setFechaIni(fechaI);
            x.setFechaFin(fechaF);
            x.setTema(tema.getTema(t.get(0)[3].toString()));
            x.setCurso(curso.getCurso(t.get(0)[4].toString()));
            x.setAula(aula.getAula(t.get(0)[5].toString()));
            x.setEmpleado(empleado.getEmpleado(t.get(0)[6].toString()));
            return x;

        }else{
             return null;
        }

    }
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------

//------------------------------------------------------------------------------



}


